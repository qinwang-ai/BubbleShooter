3781b94ef6b1f28152c62f732f1de8c8
jsio("import device");var _cacheWorker;function init(){return navigator.serviceWorker.register("cache-worker.js",{scope:"cache-worker.js"}).then(function(a){_cacheWorker=a.installing||a.waiting||a.active;a.installing?console.log("cache worker installing..."):a.waiting?console.log("cache worker waiting to activate (close, then reopen app)"):a.active?console.log("cache worker already active!"):console.error("unknown cache worker state?")},function(a){console.log("cache worker failed",a)})}
exports.isEnabled="serviceWorker"in navigator&&!device.isSimulator;var _onInit;
exports.isEnabled&&(_onInit=init(),Promise.resolve(_onInit).then(function(){jsio("import ui.resource.loader");var a=ui.resource.loader.getMap(),c={},b;for(b in a)a[b].sheet&&(c[a[b].sheet]=!0);a=Object.keys(c);a.unshift(window.location.toString());return exports.addToCache(a)}).then(function(a){console.log("spritesheets now available offline");a&&(a.failedURLs&&0<a.failedURLs.length)&&console.error("following spritesheets failed to load:",a.failedURLs)}));
exports.addWhitelistDomain=function(a){return!_onInit?Promise.reject(Error("cache not available")):Promise.resolve(_onInit).then(function(){return sendMessage({command:"addWhitelistDomain",domain:a})})};exports.addToCache=function(a){Array.isArray(a)||(a=[a]);return!_onInit?Promise.reject(Error("cache not available")):Promise.resolve(_onInit).then(function(){return sendMessage({command:"addURLs",urls:a})})};
function sendMessage(a){return new Promise(function(c,b){var d=new MessageChannel;d.port1.onmessage=function(a){a.data.error?b(a.data.error):c(a.data)};_cacheWorker||b(Error("no worker found"));_cacheWorker.postMessage(a,[d.port2])})};
