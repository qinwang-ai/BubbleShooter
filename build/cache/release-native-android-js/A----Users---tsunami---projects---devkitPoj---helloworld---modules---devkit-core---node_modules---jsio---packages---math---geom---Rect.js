e48f5dd471e0f85603af7e3de89df4b1
jsio("import lib.Enum");jsio("import .Point");jsio("import .Line");jsio("import .intersect");
var Users_tsunami_projects_devkitPoj_helloworld_modules_devkit_core_node_modules_jsio_packages_math_geom_Rect=__class__,Rect=exports=Users_tsunami_projects_devkitPoj_helloworld_modules_devkit_core_node_modules_jsio_packages_math_geom_Rect(function(){return this.init&&this.init.apply(this,arguments)},function(){this.init=function(a,b,c,d){switch(arguments.length){case 0:this.width=this.height=this.x=this.y=0;break;case 1:this.width=a.width;this.height=a.height;this.x=a.x;this.y=a.y;break;case 2:this.x=
a.x;this.y=a.y;this.width=b.x;this.height=b.y;break;case 3:this.x=a.x;this.y=a.y;this.width=b;this.height=c;break;case 4:this.x=a,this.y=b,this.width=c,this.height=d}};this.normalize=function(){0>this.width&&(this.x-=this.width,this.width=-this.width);0>this.height&&(this.y-=this.height,this.height=-this.height);return this};this.intersectRect=function(a){if(intersect.isRectAndRect(this,a)){var b=this.y,c=this.x+this.width,d=this.y+this.height;this.x=Math.max(this.x,a.x);this.y=Math.max(b,a.y);this.width=
Math.min(c,a.x+a.width)-this.x;this.height=Math.min(d,a.y+a.height)-this.y}else this.height=this.width=0};this.unionRect=function(a){this.normalize();a.normalize&&a.normalize();var b=this.x+this.width,c=this.y+this.height,d=a.x+a.width,e=a.y+a.height;this.x=this.x<a.x?this.x:a.x;this.y=this.y<a.y?this.y:a.y;this.width=(b>d?b:d)-this.x;this.height=(c>e?c:e)-this.y};this.getCorner=function(a){switch(a){case CORNERS.TOP_LEFT:return new Point(this.x,this.y);case CORNERS.TOP_RIGHT:return new Point(this.x+
this.width,this.y);case CORNERS.BOTTOM_LEFT:return new Point(this.x,this.y+this.height);case CORNERS.BOTTOM_RIGHT:return new Point(this.x+this.width,this.y+this.height)}};this.getSide=function(a){switch(a){case SIDES.TOP:return new Line(this.getCorner(CORNERS.TOP_LEFT),this.getCorner(CORNERS.TOP_RIGHT));case SIDES.RIGHT:return new Line(this.getCorner(CORNERS.TOP_RIGHT),this.getCorner(CORNERS.BOTTOM_RIGHT));case SIDES.BOTTOM:return new Line(this.getCorner(CORNERS.BOTTOM_RIGHT),this.getCorner(CORNERS.BOTTOM_LEFT));
case SIDES.LEFT:return new Line(this.getCorner(CORNERS.BOTTOM_LEFT),this.getCorner(CORNERS.TOP_LEFT))}};this.getCenter=function(){return new Point(this.x+this.width/2,this.y+this.height/2)}}),SIDES=Rect.SIDES=lib.Enum("TOP","BOTTOM","LEFT","RIGHT"),CORNERS=Rect.CORNERS=lib.Enum("TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT");
